import { useEffect, useState } from "react";

const useMedia = () => {
    const [stream, setStream] = useState(null);

    useEffect(() => {
        const getMediaStream = async () => {
            try {
                const mediaStream = await navigator.mediaDevices.getUserMedia({
                    video: true,
                    audio: true,
                });
                setStream(mediaStream);
            } catch (error) {
                console.error("Error accessing media devices:", error);
                // Optionally handle the error here
            }
        };

        getMediaStream();

        // Clean-up function to release the media stream when the component unmounts
        return () => {
            if (stream) {
                stream.getTracks().forEach(track => {
                    track.stop();
                });
            }
        };
    }, []); // Empty dependency array ensures this effect runs only once

    return [stream]; // Return stream as an iterable value
};

export default useMedia;
